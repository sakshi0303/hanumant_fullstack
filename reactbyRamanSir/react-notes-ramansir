react is javascript library or framework:
library: used
framework: 
file create 10 time
framework: react

download node
>install npm
>npm i -g create-react-app 
>npx create-react-app frontend
>





>npm create vite@latest
>y
>project name:: dummy
>framework: react
>variant: javascript
    >cd Dummy
    >npm install
    >npm run dev

in src app.js: remove all the div tag inside fregment
remove all jss property in app.css and index.css

>taiwind
go to tailwind: 
search for vite framework:::  https://tailwindcss.com/docs/guides/vite

run the command in terminal and add taiwind.config.js and index.css
>npm i
>npm run dev 

npm i lucide-react, react-router-dom
change App.jsx and main.jsx


main file: App.jsx
serve in 

Dev UI>> https://www.devui.io/components/cards
 > view components
 > card components
 > toggle from html to react code
 > paste in Cart.jsx
 > export default in Cart.jsx --> file name should be capital letter export  default function Card() {
    > Card.jsx and  export default function Card name should be same 
 > add cart and serve in App.jsx
> and app.js is serve in Main.jsx


>react props: 
    data will keep on changing inside one component
    and inside Card pass val as argumnet a
    <Card name="Sakshi" paragraph=" Sakshi Descripting" link="Click here" />
    <Card name="Swarna" paragraph=" Swarnd Descripting" link="Click " />
    export default function Card({ name, paragraph, link }) {
        {name} {paragraph} {link}

> w3 react , geek for geek free code camp

react-router-dom

only components are changes,navbar and header is fixed eg: youtube.com
for tailwindcss::
>npm install lucide-react // it is necessaary to 
> npm i react-router-dom

in component: get navbar devi code

From https://www.devui.io/
in Pages: 
About : hero
contact: signin
AboutUS: team
footer
In Components
navbar : navbar 

download >>>npm i react-router-dom , lucide-react
instead of href , convert to to

outlink
instead of <a></a> use react trouter <link> 
Navbar
> <a > -->> <link>
> href===> to

go to main.js
> remove app and add   <RouterProvider router={router}/>
> RouterProvider router={route}
import { createBrowserRouter,CreateRoutesFromElement,Route,RouterProvider}


1) create components rom devui , rename class name and put default keyword while exporting
2) in NavBar: change href--> to and <a> to <Link>(from react router dom)
3) in App.jsx: import navbar,footer and Outlet from react router dom
4) in main.jsx let router=CreateBrowserRouter(createRoutesFromElement(Route path:"/" elemer={}))

import {createBrowserRouter,createRoutesFromElements,Route,RouterProvider} from 'react-router-dom'



<!-- 
const router=createBrowserRouter(
  createRoutesFromElements(
    <Route path='' element={<App/>}>
      <Route  path='about' element={<About/>}/>
      <Route  path='contact' element={<ContactUs/>}/>
      <Route  path='' element={<Home/>}/>

    </Route>

  )
)
createRoot(document.getElementById('root')).render(
  <StrictMode>
    <RouterProvider router={router}/>
  </StrictMode>, -->

USECONTEXT------------>>>>

to avoid props drilling we use usecontent
rect-roter-dom
c
createcontext: range


to send data from one component data to another compoenet data:
useContext ref()
user(give),setuser(take)
and userContent will take the data from userComponent and  send  data to the setuserUsercomponet  via Range/channel

download es7 extentstion
ES7 React/Redux/GraphQL/React-Native snippets
createContext (setuser)--> create bridge/ 

useContext(user) // channel create
UserContext.jsx 
UserContextProvider.jsx

sendbutton useContext
setuser: send
use: receive
createcontext: 

usercontext will send the data
in app.js: 
